/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MiniMintMarketplace,
  MiniMintMarketplaceInterface,
} from "../../contracts/MiniMintMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mainCollection",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NFTDelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "NFTListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "NFTSold",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "delistNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct MiniMintMarketplace.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
    ],
    name: "isFactoryDeployedCollection",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mainCollection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051611aea380380611aea83398181016040528101906100329190610104565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050610144565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d1826100a6565b9050919050565b6100e1816100c6565b81146100ec57600080fd5b50565b6000815190506100fe816100d8565b92915050565b6000806040838503121561011b5761011a6100a1565b5b6000610129858286016100ef565b925050602061013a858286016100ef565b9150509250929050565b60805160a0516119656101856000396000818161024e0152818161045a0152818161070b0152610aa401526000818161033f0152610fab01526119656000f3fe60806040526004361061007a5760003560e01c8063a17a70941161004e578063a17a709414610162578063a82ba76f1461018b578063ad05f1b4146101a7578063c45a0155146101d05761007a565b806207df301461007f578063689b5e3c146100bd57806388700d1c146100e8578063927ca0b414610125575b600080fd5b34801561008b57600080fd5b506100a660048036038101906100a191906110a5565b6101fb565b6040516100b4929190611103565b60405180910390f35b3480156100c957600080fd5b506100d261024c565b6040516100df919061112c565b60405180910390f35b3480156100f457600080fd5b5061010f600480360381019061010a91906110a5565b610270565b60405161011c9190611194565b60405180910390f35b34801561013157600080fd5b5061014c600480360381019061014791906111af565b61033a565b60405161015991906111f7565b60405180910390f35b34801561016e57600080fd5b50610189600480360381019061018491906110a5565b610457565b005b6101a560048036038101906101a091906110a5565b610708565b005b3480156101b357600080fd5b506101ce60048036038101906101c99190611212565b610aa1565b005b3480156101dc57600080fd5b506101e5610fa9565b6040516101f2919061112c565b60405180910390f35b6000602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b7f000000000000000000000000000000000000000000000000000000000000000081565b610278610fcd565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905092915050565b6000807f0000000000000000000000000000000000000000000000000000000000000000905060008173ffffffffffffffffffffffffffffffffffffffff166346e635866040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103ad573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103d691906113d3565b905060005b815181101561044a578473ffffffffffffffffffffffffffffffffffffffff1682828151811061040e5761040d61141c565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff160361043d5760019350505050610452565b80806001019150506103db565b506000925050505b919050565b817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806104b757506104b68161033a565b5b6104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed906114ce565b60405180910390fd5b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614610626576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061d9061153a565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050828473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ffc314074f528769d77ad4a29ede7c622894f632282e936ebefff2646a598c2ee60405160405180910390a450505050565b817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061076857506107678161033a565b5b6107a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079e906114ce565b60405180910390fd5b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905060008160200151116108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a3906115a6565b60405180910390fd5b806020015134146108f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e990611612565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050806000015173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156109bd573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff166342842e0e826000015133866040518463ffffffff1660e01b81526004016109ff93929190611632565b600060405180830381600087803b158015610a1957600080fd5b505af1158015610a2d573d6000803e3d6000fd5b50505050828473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff6ccc0cf89c21c54724ea6ef2ec01da8fe33a1cebe06607e160fd78483eba3028460200151604051610a939190611669565b60405180910390a450505050565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610b015750610b008161033a565b5b610b40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b37906114ce565b60405180910390fd5b60008211610b83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7a906116d0565b60405180910390fd5b60008490503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b8152600401610bd89190611669565b602060405180830381865afa158015610bf5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1991906116f0565b73ffffffffffffffffffffffffffffffffffffffff1614610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c669061178f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b8152600401610caa9291906117af565b602060405180830381865afa158015610cc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ceb9190611804565b80610d9a57503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc866040518263ffffffff1660e01b8152600401610d419190611669565b602060405180830381865afa158015610d5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8291906116f0565b73ffffffffffffffffffffffffffffffffffffffff16145b610dd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd0906118a3565b60405180910390fd5b60008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206001015414610e6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e659061190f565b60405180910390fd5b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001848152506000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050838573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fbeab3a2bb824b124a8a1eb465eec003338d61b414db132d37e9b3a984fdcf01086604051610f9a9190611669565b60405180910390a45050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061103c82611011565b9050919050565b61104c81611031565b811461105757600080fd5b50565b60008135905061106981611043565b92915050565b6000819050919050565b6110828161106f565b811461108d57600080fd5b50565b60008135905061109f81611079565b92915050565b600080604083850312156110bc576110bb611007565b5b60006110ca8582860161105a565b92505060206110db85828601611090565b9150509250929050565b6110ee81611031565b82525050565b6110fd8161106f565b82525050565b600060408201905061111860008301856110e5565b61112560208301846110f4565b9392505050565b600060208201905061114160008301846110e5565b92915050565b61115081611031565b82525050565b61115f8161106f565b82525050565b60408201600082015161117b6000850182611147565b50602082015161118e6020850182611156565b50505050565b60006040820190506111a96000830184611165565b92915050565b6000602082840312156111c5576111c4611007565b5b60006111d38482850161105a565b91505092915050565b60008115159050919050565b6111f1816111dc565b82525050565b600060208201905061120c60008301846111e8565b92915050565b60008060006060848603121561122b5761122a611007565b5b60006112398682870161105a565b935050602061124a86828701611090565b925050604061125b86828701611090565b9150509250925092565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112b38261126a565b810181811067ffffffffffffffff821117156112d2576112d161127b565b5b80604052505050565b60006112e5610ffd565b90506112f182826112aa565b919050565b600067ffffffffffffffff8211156113115761131061127b565b5b602082029050602081019050919050565b600080fd5b60008151905061133681611043565b92915050565b600061134f61134a846112f6565b6112db565b9050808382526020820190506020840283018581111561137257611371611322565b5b835b8181101561139b57806113878882611327565b845260208401935050602081019050611374565b5050509392505050565b600082601f8301126113ba576113b9611265565b5b81516113ca84826020860161133c565b91505092915050565b6000602082840312156113e9576113e8611007565b5b600082015167ffffffffffffffff8111156114075761140661100c565b5b611413848285016113a5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4d61726b6574706c6163653a20556e737570706f7274656420636f6c6c65637460008201527f696f6e0000000000000000000000000000000000000000000000000000000000602082015250565b60006114b860238361144b565b91506114c38261145c565b604082019050919050565b600060208201905081810360008301526114e7816114ab565b9050919050565b7f596f7520617265206e6f74207468652073656c6c657200000000000000000000600082015250565b600061152460168361144b565b915061152f826114ee565b602082019050919050565b6000602082019050818103600083015261155381611517565b9050919050565b7f4e4654206973206e6f74206c697374656420666f722073616c65000000000000600082015250565b6000611590601a8361144b565b915061159b8261155a565b602082019050919050565b600060208201905081810360008301526115bf81611583565b9050919050565b7f496e636f72726563742076616c75652073656e74000000000000000000000000600082015250565b60006115fc60148361144b565b9150611607826115c6565b602082019050919050565b6000602082019050818103600083015261162b816115ef565b9050919050565b600060608201905061164760008301866110e5565b61165460208301856110e5565b61166160408301846110f4565b949350505050565b600060208201905061167e60008301846110f4565b92915050565b7f5072696365206d7573742062652067726561746572207468616e207a65726f00600082015250565b60006116ba601f8361144b565b91506116c582611684565b602082019050919050565b600060208201905081810360008301526116e9816116ad565b9050919050565b60006020828403121561170657611705611007565b5b600061171484828501611327565b91505092915050565b7f596f7520617265206e6f7420746865206f776e6572206f662074686973204e4660008201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b600061177960218361144b565b91506117848261171d565b604082019050919050565b600060208201905081810360008301526117a88161176c565b9050919050565b60006040820190506117c460008301856110e5565b6117d160208301846110e5565b9392505050565b6117e1816111dc565b81146117ec57600080fd5b50565b6000815190506117fe816117d8565b92915050565b60006020828403121561181a57611819611007565b5b6000611828848285016117ef565b91505092915050565b7f4d61726b6574706c616365206973206e6f7420617070726f76656420746f207460008201527f72616e736665722074686973204e465400000000000000000000000000000000602082015250565b600061188d60308361144b565b915061189882611831565b604082019050919050565b600060208201905081810360008301526118bc81611880565b9050919050565b7f4e465420697320616c7265616479206c69737465640000000000000000000000600082015250565b60006118f960158361144b565b9150611904826118c3565b602082019050919050565b60006020820190508181036000830152611928816118ec565b905091905056fea2646970667358221220f4f019ae8570f20a240fc3f439957868d7899d2ed0cbe56529663a12a95cc18064736f6c634300081b0033";

type MiniMintMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MiniMintMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MiniMintMarketplace__factory extends ContractFactory {
  constructor(...args: MiniMintMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factory: AddressLike,
    _mainCollection: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _factory,
      _mainCollection,
      overrides || {}
    );
  }
  override deploy(
    _factory: AddressLike,
    _mainCollection: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_factory, _mainCollection, overrides || {}) as Promise<
      MiniMintMarketplace & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MiniMintMarketplace__factory {
    return super.connect(runner) as MiniMintMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MiniMintMarketplaceInterface {
    return new Interface(_abi) as MiniMintMarketplaceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MiniMintMarketplace {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MiniMintMarketplace;
  }
}
